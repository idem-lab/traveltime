[{"path":[]},{"path":"https://idem-lab.github.io/traveltime/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://idem-lab.github.io/traveltime/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://idem-lab.github.io/traveltime/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://idem-lab.github.io/traveltime/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://idem-lab.github.io/traveltime/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement gerry.ryan@thekids.org.au. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://idem-lab.github.io/traveltime/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://idem-lab.github.io/traveltime/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://idem-lab.github.io/traveltime/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://idem-lab.github.io/traveltime/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://idem-lab.github.io/traveltime/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://idem-lab.github.io/traveltime/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://idem-lab.github.io/traveltime/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 traveltime authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://idem-lab.github.io/traveltime/articles/singapore.html","id":"prepare-the-data","dir":"Articles","previous_headings":"","what":"Prepare the data","title":"A practical example: walking from public transport in Singapore","text":"exercise, need two items data: points calculate travel time — locations Singapore’s MRT LRT stations, area interest — case map Singapore.","code":""},{"path":"https://idem-lab.github.io/traveltime/articles/singapore.html","id":"points","dir":"Articles","previous_headings":"Prepare the data","what":"Points","title":"A practical example: walking from public transport in Singapore","text":"points interest stations data set included traveltime; 563 row, 2 column matrix containing longitude (x) latitude (y) LRT MRT station exits Singapore 1:","code":"library(traveltime) head(stations) #>             x        y #> [1,] 103.9091 1.334922 #> [2,] 103.9335 1.336555 #> [3,] 103.8493 1.297699 #> [4,] 103.8508 1.299195 #> [5,] 103.9094 1.335311 #> [6,] 103.9389 1.344999"},{"path":"https://idem-lab.github.io/traveltime/articles/singapore.html","id":"area-of-interest","dir":"Articles","previous_headings":"Prepare the data","what":"Area of interest","title":"A practical example: walking from public transport in Singapore","text":"obtain area interest, download national-level polygon boundary Singapore using geodata package. download national boundary (level = 0) low resolution (resolution = 2). boundary singapore_shapefile SpatVector class object package terra.","code":"library(terra) #> terra 1.8.42 library(geodata)  singapore_shapefile <- gadm(   country = \"Singapore\",   level = 0,   path = tempdir(),   resolution = 2 )  singapore_shapefile #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 1, 2  (geometries, attributes) #>  extent      : 103.6091, 104.0858, 1.1664, 1.4714  (xmin, xmax, ymin, ymax) #>  coord. ref. : lon/lat WGS 84 (EPSG:4326)  #>  names       : GID_0   COUNTRY #>  type        : <chr>     <chr> #>  values      :   SGP Singapore"},{"path":"https://idem-lab.github.io/traveltime/articles/singapore.html","id":"friction-surface","dir":"Articles","previous_headings":"Prepare the data","what":"Friction surface","title":"A practical example: walking from public transport in Singapore","text":"Now two items data require initially, next step prepare friction surface area interest. use friction surface Weiss et al. (2020)2 can downloaded traveltime function get_friction_surface(). function takes extents variety formats returns surface extent . can pass basemap singapore_shapefile, SpatVector, directly extent. ’re interested walking time station, ’ll download walking friction surface specifying surface = \"walk2020\". (Alternatively, use surface = \"motor2020\" motorised travel). ’re interested walking land, mask areas outside land boundary singapore_shapefile: Thus friction surface SpatRaster:","code":"friction_singapore <- get_friction_surface(     surface = \"walk2020\",     extent = singapore_shapefile   )|>    mask(singapore_shapefile) #> Registered S3 method overwritten by 'malariaAtlas': #>   method           from    #>   autoplot.default ggplot2 #> Checking if the following Surface-Year combinations are available to download: #>  #>     DATASET ID  YEAR #>   - Accessibility__202001_Global_Walking_Only_Friction_Surface:  DEFAULT #>  #> Loading required package: sf #> Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.4.0; sf_use_s2() is FALSE #> No encoding supplied: defaulting to UTF-8. #> <GMLEnvelope> #> ....|-- lowerCorner: 1.1664 103.6091 #> ....|-- upperCorner: 1.4714 104.0858Start tag expected, '<' not found friction_singapore #> class       : SpatRaster  #> dimensions  : 37, 57, 1  (nrow, ncol, nlyr) #> resolution  : 0.008333333, 0.008333333  (x, y) #> extent      : 103.6083, 104.0833, 1.166667, 1.475  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> varname     : Accessibility__202001_Global_Walking_Only_Friction_Surface_1.1664,103.6091,1.4714,104.0858  #> name        : friction_surface  #> min value   :       0.01200000  #> max value   :       0.06192715"},{"path":"https://idem-lab.github.io/traveltime/articles/singapore.html","id":"input-data","dir":"Articles","previous_headings":"Prepare the data","what":"Input data","title":"A practical example: walking from public transport in Singapore","text":"plot friction surface raster friction_singapore, vector boundary singapore_shapefile grey line, stations grey points. traveltime takes resistance values friction (see paper details), higher values friction indicate time travelling across given cell. Friction surface raster Singapore, showing Singapore boundary grey, station locations grey points.","code":"library(tidyterra) #> Registered S3 method overwritten by 'tidyterra': #>   method              from         #>   autoplot.SpatRaster malariaAtlas #>  #> Attaching package: 'tidyterra' #> The following object is masked from 'package:stats': #>  #>     filter library(ggplot2)  ggplot() +   geom_spatraster(     data = friction_singapore   ) +   geom_spatvector(     data = singapore_shapefile,     fill = \"transparent\",     col = \"grey50\"   ) +   geom_point(     data = stations,     aes(       x = x,       y = y     ),     col = \"grey60\",     size = 0.5   ) +   scale_fill_viridis_c(     option = \"A\",     na.value = \"transparent\",     direction = -1   ) +   labs(     fill = \"Resistance\",     x = element_blank(),     y = element_blank()   ) +   theme_minimal()"},{"path":"https://idem-lab.github.io/traveltime/articles/singapore.html","id":"calculate-travel-time","dir":"Articles","previous_headings":"","what":"Calculate travel time","title":"A practical example: walking from public transport in Singapore","text":"data collected, function calculate_travel_time() takes friction surface friction_singapore points interest stations, returns SpatRaster walking time minutes cell nearest station:","code":"trave_time_singapore <- calculate_travel_time(   friction_surface = friction_singapore,   points = stations )  trave_time_singapore #> class       : SpatRaster  #> dimensions  : 37, 57, 1  (nrow, ncol, nlyr) #> resolution  : 0.008333333, 0.008333333  (x, y) #> extent      : 103.6083, 104.0833, 1.166667, 1.475  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> name        : travel_time  #> min value   :           0  #> max value   :         Inf"},{"path":"https://idem-lab.github.io/traveltime/articles/singapore.html","id":"plot-results","dir":"Articles","previous_headings":"Calculate travel time","what":"Plot results","title":"A practical example: walking from public transport in Singapore","text":"present resulting calculated travel times (expected) travel times lowest near station exits progressively higher away. Note results trave_time_singapore include infinite values (Inf ). islands south north-east shown filled cells figure , .e., masked singapore_shapefile. islands connected cells station, calculated travel time infinite, cells appear figure . Map walking travel time Singapore, minutes nearest MRT LRT station.","code":"ggplot() +   geom_spatraster(     data = trave_time_singapore   ) +   scale_fill_viridis_c(     option = \"A\",     direction = -1,     na.value = \"transparent\"   ) +   theme_minimal() +   labs(fill = \"Minutes\") +   geom_spatvector(     data = singapore_shapefile,     fill = \"transparent\",     col = \"grey20\"   )"},{"path":"https://idem-lab.github.io/traveltime/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gerry Ryan. Author, maintainer. Daniel Weiss. Author. Nicholas Tierney. Contributor.","code":""},{"path":"https://idem-lab.github.io/traveltime/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ryan G, Weiss D (2025). traveltime: Calculate Travel Times Space. R package version 0.0.0.9000, https://idem-lab.github.io/traveltime/.","code":"@Manual{,   title = {traveltime: Calculate Travel Times Over Space},   author = {Gerry Ryan and Daniel Weiss},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://idem-lab.github.io/traveltime/}, }"},{"path":"https://idem-lab.github.io/traveltime/index.html","id":"traveltime","dir":"","previous_headings":"","what":"Calculate Travel Times Over Space","title":"Calculate Travel Times Over Space","text":"traveltime enables user create map travel time area interest user-specified set geographic coordinates friction surface. package provides convenient access global friction surfaces walking motorised travel year 2020. final result raster area interest value cell lowest travel time minutes specified locations. Walking travel time rail transport Singapore","code":""},{"path":"https://idem-lab.github.io/traveltime/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calculate Travel Times Over Space","text":"","code":"install.packages(\"traveltime\", repos = c(\"https://idem-lab.r-universe.dev\")) remotes::install_github(\"idem-lab/traveltime\")"},{"path":[]},{"path":"https://idem-lab.github.io/traveltime/index.html","id":"website","dir":"","previous_headings":"Documentation","what":"Website","title":"Calculate Travel Times Over Space","text":"https://idem-lab.github.io/traveltime/","code":""},{"path":"https://idem-lab.github.io/traveltime/index.html","id":"paper","dir":"","previous_headings":"Documentation","what":"Paper","title":"Calculate Travel Times Over Space","text":"Ryan, G.E., Tierney, N., Golding, N., Weiss, D.J (2025). traveltime: R package calculate travel time across landscape user-specified locations. EarthArXiv 10.31223/X56M74","code":""},{"path":"https://idem-lab.github.io/traveltime/index.html","id":"what-does-this-thing-do","dir":"","previous_headings":"","what":"What does this thing do?","title":"Calculate Travel Times Over Space","text":"traveltime workflow starts : set points interested , either supply friction surface area interested , supply area interest use get_friction_surface retrieve pre-prepared walking motorised travel friction surface Weiss et al. (2020) 1 — probably case applications. , running calculate_travel_time produces raster terra SpatRaster travel time (temporally) nearest supplied points area interest.","code":""},{"path":"https://idem-lab.github.io/traveltime/index.html","id":"a-practical-example-walking-from-public-transport-in-singapore","dir":"","previous_headings":"What does this thing do?","what":"A practical example: walking from public transport in Singapore","title":"Calculate Travel Times Over Space","text":"calculate walking travel time nearest mass transit station across island nation Singapore — specifically Mass Rapid Transit (MRT) Light Rail Transit (LRT) stations — create map .","code":""},{"path":"https://idem-lab.github.io/traveltime/index.html","id":"prepare-the-data","dir":"","previous_headings":"What does this thing do? > A practical example: walking from public transport in Singapore","what":"Prepare the data","title":"Calculate Travel Times Over Space","text":"exercise, need two items data: points calculate travel time — locations Singapore’s MRT LRT stations, area interest — case map Singapore.","code":""},{"path":"https://idem-lab.github.io/traveltime/index.html","id":"points","dir":"","previous_headings":"What does this thing do? > A practical example: walking from public transport in Singapore > Prepare the data","what":"Points","title":"Calculate Travel Times Over Space","text":"points interest stations data set included traveltime; 563 row, 2 column matrix containing longitude (x) latitude (y) LRT MRT station exits Singapore 2:","code":"library(traveltime) head(stations) #>             x        y #> [1,] 103.9091 1.334922 #> [2,] 103.9335 1.336555 #> [3,] 103.8493 1.297699 #> [4,] 103.8508 1.299195 #> [5,] 103.9094 1.335311 #> [6,] 103.9389 1.344999"},{"path":"https://idem-lab.github.io/traveltime/index.html","id":"area-of-interest","dir":"","previous_headings":"What does this thing do? > A practical example: walking from public transport in Singapore > Prepare the data","what":"Area of interest","title":"Calculate Travel Times Over Space","text":"obtain area interest, download national-level polygon boundary Singapore using geodata package. download national boundary (level = 0) low resolution (resolution = 2). boundary singapore_shapefile SpatVector class object package terra.","code":"library(terra) #> terra 1.8.29 library(geodata)  singapore_shapefile <- gadm(   country = \"Singapore\",   level = 0,   path = tempdir(),   resolution = 2 )  singapore_shapefile #>  class       : SpatVector  #>  geometry    : polygons  #>  dimensions  : 1, 2  (geometries, attributes) #>  extent      : 103.6091, 104.0858, 1.1664, 1.4714  (xmin, xmax, ymin, ymax) #>  coord. ref. : lon/lat WGS 84 (EPSG:4326)  #>  names       : GID_0   COUNTRY #>  type        : <chr>     <chr> #>  values      :   SGP Singapore"},{"path":"https://idem-lab.github.io/traveltime/index.html","id":"friction-surface","dir":"","previous_headings":"What does this thing do? > A practical example: walking from public transport in Singapore > Prepare the data","what":"Friction surface","title":"Calculate Travel Times Over Space","text":"Now two items data require initially, next step prepare friction surface area interest. use friction surface Weiss et al. (2020) can downloaded traveltime function get_friction_surface(). function takes extents variety formats returns surface extent . can pass basemap singapore_shapefile, SpatVector, directly extent. ’re interested walking time station, ’ll download walking friction surface specifying surface = \"walk2020\". (Alternatively, use surface = \"motor2020\" motorised travel). ’re interested walking land, mask areas outside land boundary singapore_shapefile: Thus friction surface SpatRaster:","code":"friction_singapore <- get_friction_surface(     surface = \"walk2020\",     extent = singapore_shapefile   )|>    mask(singapore_shapefile) #> Checking if the following Surface-Year combinations are available to download: #>  #>     DATASET ID  YEAR #>   - Accessibility__202001_Global_Walking_Only_Friction_Surface:  DEFAULT #>  #> Loading required package: sf #> Linking to GEOS 3.13.0, GDAL 3.10.0, PROJ 9.5.1; sf_use_s2() is FALSE #> No encoding supplied: defaulting to UTF-8. #> <GMLEnvelope> #> ....|-- lowerCorner: 1.1664 103.6091 #> ....|-- upperCorner: 1.4714 104.0858Start tag expected, '<' not found friction_singapore #> class       : SpatRaster  #> dimensions  : 37, 57, 1  (nrow, ncol, nlyr) #> resolution  : 0.008333333, 0.008333333  (x, y) #> extent      : 103.6083, 104.0833, 1.166667, 1.475  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source(s)   : memory #> varname     : Accessibility__202001_Global_Walking_Only_Friction_Surface_1.1664,103.6091,1.4714,104.0858  #> name        : friction_surface  #> min value   :       0.01200000  #> max value   :       0.06192715"},{"path":"https://idem-lab.github.io/traveltime/index.html","id":"input-data","dir":"","previous_headings":"What does this thing do? > A practical example: walking from public transport in Singapore > Prepare the data","what":"Input data","title":"Calculate Travel Times Over Space","text":"plot friction surface raster friction_singapore, vector boundary singapore_shapefile grey line, stations grey points. traveltime takes resistance values friction (see paper details), higher values friction indicate time travelling across given cell. Friction surface raster Singapore, showing Singapore boundary grey, station locations grey points.","code":"library(tidyterra) #> Registered S3 method overwritten by 'tidyterra': #>   method              from         #>   autoplot.SpatRaster malariaAtlas #>  #> Attaching package: 'tidyterra' #> The following object is masked from 'package:stats': #>  #>     filter library(ggplot2)  ggplot() +   geom_spatraster(     data = friction_singapore   ) +   geom_spatvector(     data = singapore_shapefile,     fill = \"transparent\",     col = \"grey50\"   ) +   geom_point(     data = stations,     aes(       x = x,       y = y     ),     col = \"grey60\",     size = 0.5   ) +   scale_fill_viridis_c(     option = \"A\",     na.value = \"transparent\",     direction = -1   ) +   labs(     fill = \"Resistance\",     x = element_blank(),     y = element_blank()   ) +   theme_minimal()"},{"path":"https://idem-lab.github.io/traveltime/index.html","id":"calculate-travel-time","dir":"","previous_headings":"What does this thing do? > A practical example: walking from public transport in Singapore","what":"Calculate travel time","title":"Calculate Travel Times Over Space","text":"data collected, function calculate_travel_time() takes friction surface friction_singapore points interest stations, returns SpatRaster walking time minutes cell nearest station:","code":"trave_time_singapore <- calculate_travel_time(   friction_surface = friction_singapore,   points = stations )  trave_time_singapore #> class       : SpatRaster  #> dimensions  : 37, 57, 1  (nrow, ncol, nlyr) #> resolution  : 0.008333333, 0.008333333  (x, y) #> extent      : 103.6083, 104.0833, 1.166667, 1.475  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> name        : travel_time  #> min value   :           0  #> max value   :         Inf"},{"path":"https://idem-lab.github.io/traveltime/index.html","id":"plot-results","dir":"","previous_headings":"What does this thing do? > A practical example: walking from public transport in Singapore > Calculate travel time","what":"Plot results","title":"Calculate Travel Times Over Space","text":"present resulting calculated travel times (expected) travel times lowest near station exits progressively higher away. Note results trave_time_singapore include infinite values (Inf ). islands south north-east shown filled cells figure , .e., masked singapore_shapefile. islands connected cells station, calculated travel time infinite, cells appear figure . Map walking travel time Singapore, minutes nearest MRT LRT station.","code":"ggplot() +   geom_spatraster(     data = trave_time_singapore   ) +   scale_fill_viridis_c(     option = \"A\",     direction = -1,     na.value = \"transparent\"   ) +   theme_minimal() +   labs(fill = \"Minutes\") +   geom_spatvector(     data = singapore_shapefile,     fill = \"transparent\",     col = \"grey20\"   )"},{"path":"https://idem-lab.github.io/traveltime/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Calculate Travel Times Over Space","text":"Please note traveltime project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://idem-lab.github.io/traveltime/reference/calculate_travel_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate travel time — calculate_travel_time","title":"Calculate travel time — calculate_travel_time","text":"Calculate travel time set points friction surface.","code":""},{"path":"https://idem-lab.github.io/traveltime/reference/calculate_travel_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate travel time — calculate_travel_time","text":"","code":"calculate_travel_time(   friction_surface,   points,   filename = NULL,   overwrite = FALSE )"},{"path":"https://idem-lab.github.io/traveltime/reference/calculate_travel_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate travel time — calculate_travel_time","text":"friction_surface SpatRaster friction surface layer resistance units. See Details. points two-column matrix, data.frame, (including tibble types) longitude (x) first column latitude (y) second, SpatVector, coordinate reference system friction_surface. filename character. Output file name extension suitable terra::writeRaster overwrite logical. TRUE filename overwritten.","code":""},{"path":"https://idem-lab.github.io/traveltime/reference/calculate_travel_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate travel time — calculate_travel_time","text":"SpatRaster","code":""},{"path":"https://idem-lab.github.io/traveltime/reference/calculate_travel_time.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate travel time — calculate_travel_time","text":"Implements methods Weiss et al. 2018, 2020 calculate travel time given locations friction surface. large areas function can require significant RAM slow. Pre-prepared walking motorised friction surfaces can obtained ?get_friction_surface. User can also provide friction surface. surface must resistance units (1/conductance), e.g. minutes/meter. See Van Etten 2017. Citations: D. J. Weiss, . Nelson, C. . Vargas-Ruiz, K. Gligoric, S., Bavadekar, E. Gabrilovich, . Bertozzi-Villa, J. Rozier, H. S. Gibson, T., Shekel, C. Kamath, . Lieber, K. Schulman, Y. Shao, V. Qarkaxhija, . K. Nandi, S. H. Keddie, S. Rumisha, P. Amratia, R. Arambepola, E. G. Chestnutt, J. J. Millar, T. L. Symons, E. Cameron, K. E. Battle, S. Bhatt, P. W. Gething. Global maps travel time healthcare facilities. (2020) Nature Medicine. https://doi.org/10.1038/s41591-020-1059-1 D. J. Weiss, . Nelson, H.S. Gibson, W. Temperley, S. Peedell, . Lieber, M. Hancher, E. Poyart, S. Belchior, N. Fullman, B. Mappin, U. Dalrymple, J. Rozier, T.C.D. Lucas, R.E. Howes, L.S. Tusting, S.Y. Kang, E. Cameron, D. Bisanzio, K.E. Battle, S. Bhatt, P.W. Gething. global map travel time cities assess inequalities accessibility 2015. (2018). Nature. https://doi:10.1038/nature25181 van Etten, J. (2017). R package gdistance: Distances routes geographical grids. Journal Statistical Software https://doi.org/10.18637/jss.v076.i13","code":""},{"path":"https://idem-lab.github.io/traveltime/reference/calculate_travel_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate travel time — calculate_travel_time","text":"","code":"ext <- matrix(   data = c(\"111\", \"0\", \"112\", 1),   nrow = 2,   ncol = 2,   dimnames = list(     c(\"x\", \"y\"),     c(\"min\", \"max\")    )  )   friction_surface <- get_friction_surface(    surface = \"motor2020\",    extent = ext  ) #> Registered S3 methods overwritten by 'malariaAtlas': #>   method              from      #>   autoplot.SpatRaster tidyterra #>   autoplot.default    ggplot2   #> Checking if the following Surface-Year combinations are available to download: #>  #>     DATASET ID  YEAR  #>   - Accessibility__202001_Global_Motorized_Friction_Surface:  DEFAULT  #>  #> Loading required package: sf #> Linking to GEOS 3.12.1, GDAL 3.8.4, PROJ 9.4.0; sf_use_s2() is FALSE #> No encoding supplied: defaulting to UTF-8. #> <GMLEnvelope> #> ....|-- lowerCorner: 0 111 #> ....|-- upperCorner: 1 112Start tag expected, '<' not found   from_here <- data.frame(    x = c(111.2, 111.9),    y = c(0.2, 0.35)  )   calculate_travel_time(   friction_surface = friction_surface,   points = from_here  ) #> class       : SpatRaster  #> dimensions  : 120, 120, 1  (nrow, ncol, nlyr) #> resolution  : 0.008333333, 0.008333333  (x, y) #> extent      : 111, 112, 3.774758e-15, 1  (xmin, xmax, ymin, ymax) #> coord. ref. :   #> source(s)   : memory #> name        : travel_time  #> min value   :      0.0000  #> max value   :    582.1882"},{"path":"https://idem-lab.github.io/traveltime/reference/ext_from_terra.html","id":null,"dir":"Reference","previous_headings":"","what":"Extent from SpatRaster or SpatVector — ext_from_terra","title":"Extent from SpatRaster or SpatVector — ext_from_terra","text":"Formats spatial extent use get_friction_surface.","code":""},{"path":"https://idem-lab.github.io/traveltime/reference/ext_from_terra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extent from SpatRaster or SpatVector — ext_from_terra","text":"","code":"ext_from_terra(r)"},{"path":"https://idem-lab.github.io/traveltime/reference/ext_from_terra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extent from SpatRaster or SpatVector — ext_from_terra","text":"r terra::SpatRaster terra::SpatVector","code":""},{"path":"https://idem-lab.github.io/traveltime/reference/ext_from_terra.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extent from SpatRaster or SpatVector — ext_from_terra","text":"2x2 matrix","code":""},{"path":"https://idem-lab.github.io/traveltime/reference/ext_from_terra.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extent from SpatRaster or SpatVector — ext_from_terra","text":"","code":"library(terra) #> terra 1.8.42 r <- terra::rast(     extent = terra::ext(c(111, 112, 0, 1))   )  ext_from_terra(r) #>   min max #> x 111 112 #> y   0   1"},{"path":"https://idem-lab.github.io/traveltime/reference/ext_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert extent to matrix — ext_matrix","title":"Convert extent to matrix — ext_matrix","text":"function allows get_friction_surface() accept argument extent vector, 2x2 matrix, SpatVector, SpatRaster extracts converts annoyingly specific format necessary download friction surface. See details ?get_friction_surface","code":""},{"path":"https://idem-lab.github.io/traveltime/reference/ext_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert extent to matrix — ext_matrix","text":"","code":"ext_matrix(extent)"},{"path":"https://idem-lab.github.io/traveltime/reference/ext_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert extent to matrix — ext_matrix","text":"extent vector length 4, 2x2 matrix, SpatExtent, SpatVector, SpatRaster","code":""},{"path":"https://idem-lab.github.io/traveltime/reference/ext_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert extent to matrix — ext_matrix","text":"2x2 matrix column names \"x\" \"y\" row names \"min\" \"max\"","code":""},{"path":"https://idem-lab.github.io/traveltime/reference/ext_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert extent to matrix — ext_matrix","text":"","code":"# vector/double x <- c(111, 112, 0, 1) ext_matrix(x) #>   min max #> x 111 112 #> y   0   1  # SpatExtent y <-  terra::ext(x) ext_matrix(y) #>   min max #> x 111 112 #> y   0   1  # SpatRaster r <- terra::rast(extent = y) ext_matrix(r) #>   min max #> x 111 112 #> y   0   1  # SpatVector v <- terra::vect(y) ext_matrix(v) #>   min max #> x 111 112 #> y   0   1"},{"path":"https://idem-lab.github.io/traveltime/reference/ext_vect_to_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Extent vector to matrix — ext_vect_to_matrix","title":"Extent vector to matrix — ext_vect_to_matrix","text":"Extent vector matrix","code":""},{"path":"https://idem-lab.github.io/traveltime/reference/ext_vect_to_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extent vector to matrix — ext_vect_to_matrix","text":"","code":"ext_vect_to_matrix(x)"},{"path":"https://idem-lab.github.io/traveltime/reference/ext_vect_to_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extent vector to matrix — ext_vect_to_matrix","text":"x numeric length 4, consisting c(xmin, xmax, ymin, ymax) dimensions extent","code":""},{"path":"https://idem-lab.github.io/traveltime/reference/ext_vect_to_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extent vector to matrix — ext_vect_to_matrix","text":"2x2 matrix","code":""},{"path":"https://idem-lab.github.io/traveltime/reference/ext_vect_to_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extent vector to matrix — ext_vect_to_matrix","text":"","code":"ext_vect_to_matrix(c(111,112,0, 1)) #>   min max #> x 111 112 #> y   0   1"},{"path":"https://idem-lab.github.io/traveltime/reference/get_friction_surface.html","id":null,"dir":"Reference","previous_headings":"","what":"Get friction surface — get_friction_surface","title":"Get friction surface — get_friction_surface","text":"Wrapper function download friction surfaces via malariaAtlas::getRaster().","code":""},{"path":"https://idem-lab.github.io/traveltime/reference/get_friction_surface.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get friction surface — get_friction_surface","text":"","code":"get_friction_surface(   surface = c(\"motor2020\", \"walk2020\"),   filename = NULL,   overwrite = FALSE,   extent = NULL )"},{"path":"https://idem-lab.github.io/traveltime/reference/get_friction_surface.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get friction surface — get_friction_surface","text":"surface \"motor2020\" \"walk2020. filename character. File name output layer. overwrite Overwrite filename exists extent Spatial extent one : numeric vector specifying c(xmin,   xmax, ymin, ymax), terra SpatExtent, SpatVector, SpatRaster extent taken, 2x2 matrix See details","code":""},{"path":"https://idem-lab.github.io/traveltime/reference/get_friction_surface.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get friction surface — get_friction_surface","text":"SpatRaster","code":""},{"path":"https://idem-lab.github.io/traveltime/reference/get_friction_surface.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get friction surface — get_friction_surface","text":"Convenience wrapper malariaAtlas::getRaster() access motorised walking travel friction layers per Weiss et al. 2020, adds safety check existing files download. Surfaces can downloaded directly : https://malariaatlas.org/project-resources/accessibility--healthcare/. — surface = \"motor2020\" download \"Explorer__2020_motorized_friction_surface\", surface = \"walk2020\" download \"Explorer__2020_walking_only_friction_surface\". D. J. Weiss, . Nelson, C. . Vargas-Ruiz, K. Gligoric, S., Bavadekar, E. Gabrilovich, . Bertozzi-Villa, J. Rozier, H. S. Gibson, T., Shekel, C. Kamath, . Lieber, K. Schulman, Y. Shao, V. Qarkaxhija, . K. Nandi, S. H. Keddie, S. Rumisha, P. Amratia, R. Arambepola, E. G. Chestnutt, J. J. Millar, T. L. Symons, E. Cameron, K. E. Battle, S. Bhatt, P. W. Gething. Global maps travel time healthcare facilities. (2020) Nature Medicine. https://doi.org/10.1038/s41591-020-1059-1 extent formatted passed malariaAtlas::getRaster() 2x2 matrix. converted matrix using ext_matrix. matrix format used returned sf::st_bbox() — first column minimum, second maximum values; rows 1 & 2 represent x & y dimensions respectively: matrix(c(\"xmin\", \"ymin\", \"xmax\", \"ymax\"), nrow = 2, ncol = 2, dimnames = list(c(\"x\", \"y\"), c(\"min\", \"max\"))). NULL extent downloads (large) global layer. Troubleshooting: get warning Failed connect MAP geoserver, issue fetching friction surface using malariaAtlas::getRaster, issue traveltime . server may may issue package.","code":""},{"path":"https://idem-lab.github.io/traveltime/reference/get_friction_surface.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get friction surface — get_friction_surface","text":"","code":"# for more examples of passing exten types see ?ext_matrix  ext <- c(111, 112, 0, 1)   get_friction_surface(    surface = \"motor2020\",    extent = ext  ) #> Checking if the following Surface-Year combinations are available to download: #>  #>     DATASET ID  YEAR  #>   - Accessibility__202001_Global_Motorized_Friction_Surface:  DEFAULT  #>  #> <GMLEnvelope> #> ....|-- lowerCorner: 0 111 #> ....|-- upperCorner: 1 112Start tag expected, '<' not found #> class       : SpatRaster  #> dimensions  : 120, 120, 1  (nrow, ncol, nlyr) #> resolution  : 0.008333333, 0.008333333  (x, y) #> extent      : 111, 112, 3.774758e-15, 1  (xmin, xmax, ymin, ymax) #> coord. ref. : lon/lat WGS 84 (EPSG:4326)  #> source      : Accessibility__202001_Global_Motorized_Friction_Surface_0,111,1,112.tif  #> name        : friction_surface"},{"path":"https://idem-lab.github.io/traveltime/reference/stations.html","id":null,"dir":"Reference","previous_headings":"","what":"Singapore MRT and LRT data — stations","title":"Singapore MRT and LRT data — stations","text":"Locations MRT LRT station exits Singapore.","code":""},{"path":"https://idem-lab.github.io/traveltime/reference/stations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Singapore MRT and LRT data — stations","text":"","code":"stations"},{"path":[]},{"path":"https://idem-lab.github.io/traveltime/reference/stations.html","id":"stations-a-data-frame-with-rows-and-columns-","dir":"Reference","previous_headings":"","what":"stations A data frame with 563 rows and 2 columns:","title":"Singapore MRT and LRT data — stations","text":"x longitude y latitude","code":""},{"path":"https://idem-lab.github.io/traveltime/reference/stations.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Singapore MRT and LRT data — stations","text":"Land Transport Authority. (2019). LTA MRT Station Exit (GEOJSON) (2024) Dataset. data.gov.sg. Retrieved December 10, 2024 https://data.gov.sg/datasets/d_b39d3a0871985372d7e1637193335da5/view","code":""},{"path":"https://idem-lab.github.io/traveltime/reference/traveltime-package.html","id":null,"dir":"Reference","previous_headings":"","what":"traveltime: Calculate Travel Times Over Space — traveltime-package","title":"traveltime: Calculate Travel Times Over Space — traveltime-package","text":"Calculate travel time friction surface specified set locations.","code":""},{"path":[]},{"path":"https://idem-lab.github.io/traveltime/reference/traveltime-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"traveltime: Calculate Travel Times Over Space — traveltime-package","text":"Maintainer: Gerry Ryan gerard.ryan@telethonkids.org.au (ORCID) Authors: Daniel Weiss (ORCID) contributors: Nicholas Tierney nicholas.tierney@gmail.com (ORCID) [contributor]","code":""}]
